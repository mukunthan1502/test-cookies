{"ast":null,"code":"var _jsxFileName = \"/Users/mukunthan/Experimentation/Authentication Testing/Azure AD/FE/src/customFetch.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"https://your-backend-api-url.com\"; // Replace with your backend URL\n\n// Utility function to get tokens from local storage\nconst getToken = key => localStorage.getItem(key);\n\n// Utility function to set tokens in local storage\nconst setToken = (key, value) => localStorage.setItem(key, value);\n\n// Utility function to remove tokens from local storage\nconst removeToken = key => localStorage.removeItem(key);\n\n// Function to refresh tokens\nconst refreshTokens = async () => {\n  const refreshToken = getToken(\"refresh_token\");\n  if (!refreshToken) {\n    throw new Error(\"No refresh token available\");\n  }\n  const response = await fetch(`${backendUrl}/refresh-token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      refresh_token: refreshToken\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    setToken(\"access_token\", data.access_token);\n    setToken(\"refresh_token\", data.refresh_token);\n    return data.access_token;\n  } else {\n    throw new Error(\"Failed to refresh token\");\n  }\n};\n\n// Custom fetch function\nexport const customFetch = async (url, options = {}, privateEndpoint = true) => {\n  let accessToken = getToken(\"access_token\");\n  const headers = {\n    ...options.headers\n  };\n  if (privateEndpoint) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n  if (response.status === 401) {\n    // Unauthorized\n    try {\n      accessToken = await refreshTokens();\n      const retryResponse = await fetch(url, {\n        ...options,\n        headers\n      });\n      return retryResponse;\n    } catch (error) {\n      removeToken(\"access_token\");\n      removeToken(\"refresh_token\");\n      window.location.href = `https://login.microsoftonline.com/your-tenant-id/oauth2/v2.0/authorize?client_id=your-client-id&response_type=code&redirect_uri=http://localhost:3000/redirect&scope=openid profile email offline_access`;\n      return;\n    }\n  } else if (response.status === 400 || response.status === 500) {\n    removeToken(\"access_token\");\n    removeToken(\"refresh_token\");\n    window.location.href = `https://login.microsoftonline.com/your-tenant-id/oauth2/v2.0/authorize?client_id=your-client-id&response_type=code&redirect_uri=http://localhost:3000/redirect&scope=openid profile email offline_access`;\n    return;\n  }\n  return response;\n};\n\n// Example component using customFetch\nconst ExampleComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await customFetch(`${backendUrl}/protected-endpoint`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Protected data:\", data);\n        } else {\n          console.error(\"Failed to fetch protected data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        navigate(\"/login\");\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Protected Resource\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n_s(ExampleComponent, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ExampleComponent;\nexport default ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["useEffect","useNavigate","jsxDEV","_jsxDEV","backendUrl","getToken","key","localStorage","getItem","setToken","value","setItem","removeToken","removeItem","refreshTokens","refreshToken","Error","response","fetch","method","headers","body","JSON","stringify","refresh_token","ok","data","json","access_token","customFetch","url","options","privateEndpoint","accessToken","Authorization","status","retryResponse","error","window","location","href","ExampleComponent","_s","navigate","fetchData","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mukunthan/Experimentation/Authentication Testing/Azure AD/FE/src/customFetch.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst backendUrl = \"https://your-backend-api-url.com\"; // Replace with your backend URL\n\n// Utility function to get tokens from local storage\nconst getToken = (key) => localStorage.getItem(key);\n\n// Utility function to set tokens in local storage\nconst setToken = (key, value) => localStorage.setItem(key, value);\n\n// Utility function to remove tokens from local storage\nconst removeToken = (key) => localStorage.removeItem(key);\n\n// Function to refresh tokens\nconst refreshTokens = async () => {\n  const refreshToken = getToken(\"refresh_token\");\n  if (!refreshToken) {\n    throw new Error(\"No refresh token available\");\n  }\n\n  const response = await fetch(`${backendUrl}/refresh-token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ refresh_token: refreshToken }),\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    setToken(\"access_token\", data.access_token);\n    setToken(\"refresh_token\", data.refresh_token);\n    return data.access_token;\n  } else {\n    throw new Error(\"Failed to refresh token\");\n  }\n};\n\n// Custom fetch function\nexport const customFetch = async (url, options = {}, privateEndpoint=true) => {\n  let accessToken = getToken(\"access_token\");\n\n  const headers = { ...options.headers };\n  if (privateEndpoint) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const response = await fetch(url, {\n    ...options,\n    headers,\n  });\n\n  if (response.status === 401) { // Unauthorized\n    try {\n      accessToken = await refreshTokens();\n      const retryResponse = await fetch(url, {\n        ...options,\n        headers,\n      });\n      return retryResponse;\n    } catch (error) {\n      removeToken(\"access_token\");\n      removeToken(\"refresh_token\");\n      window.location.href = `https://login.microsoftonline.com/your-tenant-id/oauth2/v2.0/authorize?client_id=your-client-id&response_type=code&redirect_uri=http://localhost:3000/redirect&scope=openid profile email offline_access`;\n      return;\n    }\n  } else if (response.status === 400 || response.status === 500) {\n    removeToken(\"access_token\");\n    removeToken(\"refresh_token\");\n    window.location.href = `https://login.microsoftonline.com/your-tenant-id/oauth2/v2.0/authorize?client_id=your-client-id&response_type=code&redirect_uri=http://localhost:3000/redirect&scope=openid profile email offline_access`;\n    return;\n  }\n\n  return response;\n};\n\n\n// Example component using customFetch\nconst ExampleComponent = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await customFetch(`${backendUrl}/protected-endpoint`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Protected data:\", data);\n        } else {\n          console.error(\"Failed to fetch protected data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        navigate(\"/login\");\n      }\n    };\n\n    fetchData();\n  }, [navigate]);\n\n  return <div>Protected Resource</div>;\n};\n\nexport default ExampleComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}