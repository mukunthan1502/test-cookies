{"ast":null,"code":"var _jsxFileName = \"/Users/mukunthan/Experimentation/Authentication Testing/Azure AD/FE/src/customFetch.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { navigateToAuthLogin, getToken, setToken, removeToken, backendUrl } from \"./utils\";\n\n// Function to refresh tokens\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const refreshTokens = async () => {\n  const refreshToken = getToken(\"refresh_token\");\n  if (!refreshToken) {\n    throw new Error(\"No refresh token available\");\n  }\n  const response = await fetch(`${backendUrl}/refresh-token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      refresh_token: refreshToken\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    setToken(\"access_token\", data.access_token);\n    // setToken(\"refresh_token\", data.refresh_token);\n    return data.access_token;\n  } else {\n    throw new Error(\"Failed to refresh token\");\n  }\n};\n\n// Custom fetch function\nexport const customFetch = async (url, options = {}, privateEndpoint = true) => {\n  let accessToken = getToken(\"access_token\");\n  const headers = {\n    ...options.headers\n  };\n  if (privateEndpoint) {\n    // headers.Authorization = `Bearer ${accessToken}`;\n  }\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n  if (!privateEndpoint) {\n    return response;\n  }\n  return;\n  if (response.status === 403) {\n    try {\n      accessToken = await refreshTokens();\n    } catch (error) {\n      removeToken(\"access_token\");\n      removeToken(\"refresh_token\");\n      navigateToAuthLogin();\n      return;\n    }\n    const reResponse = await fetch(url, {\n      ...options,\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    return reResponse;\n  }\n  return response;\n};\n\n// Example component using customFetch\nconst ExampleComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/protected-endpoint`, {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Protected data:\", data);\n        } else {\n          console.error(\"Failed to fetch protected data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        navigate(\"/login\");\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Protected Resource\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s(ExampleComponent, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ExampleComponent;\nexport default ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["useEffect","useNavigate","navigateToAuthLogin","getToken","setToken","removeToken","backendUrl","jsxDEV","_jsxDEV","refreshTokens","refreshToken","Error","response","fetch","method","headers","body","JSON","stringify","refresh_token","ok","data","json","access_token","customFetch","url","options","privateEndpoint","accessToken","status","error","reResponse","Authorization","ExampleComponent","_s","navigate","fetchData","credentials","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mukunthan/Experimentation/Authentication Testing/Azure AD/FE/src/customFetch.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  navigateToAuthLogin,\n  getToken,\n  setToken,\n  removeToken,\n  backendUrl,\n} from \"./utils\";\n\n// Function to refresh tokens\nexport const refreshTokens = async () => {\n  const refreshToken = getToken(\"refresh_token\");\n  if (!refreshToken) {\n    throw new Error(\"No refresh token available\");\n  }\n\n  const response = await fetch(`${backendUrl}/refresh-token`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ refresh_token: refreshToken }),\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    setToken(\"access_token\", data.access_token);\n    // setToken(\"refresh_token\", data.refresh_token);\n    return data.access_token;\n  } else {\n    throw new Error(\"Failed to refresh token\");\n  }\n};\n\n// Custom fetch function\nexport const customFetch = async (\n  url,\n  options = {},\n  privateEndpoint = true\n) => {\n  let accessToken = getToken(\"access_token\");\n\n  const headers = { ...options.headers };\n  if (privateEndpoint) {\n    // headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const response = await fetch(url, {\n    ...options,\n    headers,\n  });\n\n  if (!privateEndpoint) {\n    return response;\n  }\n\n  return;\n\n  if (response.status === 403) {\n    try {\n      accessToken = await refreshTokens();\n    } catch (error) {\n      removeToken(\"access_token\");\n      removeToken(\"refresh_token\");\n      navigateToAuthLogin();\n      return;\n    }\n    const reResponse = await fetch(url, {\n      ...options,\n      headers: { ...headers, Authorization: `Bearer ${accessToken}` },\n    });\n\n    return reResponse;\n  }\n\n  return response;\n};\n\n// Example component using customFetch\nconst ExampleComponent = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/protected-endpoint`, {\n          credentials: \"include\",\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Protected data:\", data);\n        } else {\n          console.error(\"Failed to fetch protected data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        navigate(\"/login\");\n      }\n    };\n\n    fetchData();\n  }, [navigate]);\n\n  return <div>Protected Resource</div>;\n};\n\nexport default ExampleComponent;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,mBAAmB,EACnBC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,UAAU,QACL,SAAS;;AAEhB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,YAAY,GAAGP,QAAQ,CAAC,eAAe,CAAC;EAC9C,IAAI,CAACO,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,UAAU,gBAAgB,EAAE;IAC1DQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,aAAa,EAAET;IAAa,CAAC;EACtD,CAAC,CAAC;EAEF,IAAIE,QAAQ,CAACQ,EAAE,EAAE;IACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClClB,QAAQ,CAAC,cAAc,EAAEiB,IAAI,CAACE,YAAY,CAAC;IAC3C;IACA,OAAOF,IAAI,CAACE,YAAY;EAC1B,CAAC,MAAM;IACL,MAAM,IAAIZ,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAAA,CACzBC,GAAG,EACHC,OAAO,GAAG,CAAC,CAAC,EACZC,eAAe,GAAG,IAAI,KACnB;EACH,IAAIC,WAAW,GAAGzB,QAAQ,CAAC,cAAc,CAAC;EAE1C,MAAMY,OAAO,GAAG;IAAE,GAAGW,OAAO,CAACX;EAAQ,CAAC;EACtC,IAAIY,eAAe,EAAE;IACnB;EAAA;EAGF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACY,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVX;EACF,CAAC,CAAC;EAEF,IAAI,CAACY,eAAe,EAAE;IACpB,OAAOf,QAAQ;EACjB;EAEA;EAEA,IAAIA,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;IAC3B,IAAI;MACFD,WAAW,GAAG,MAAMnB,aAAa,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdzB,WAAW,CAAC,cAAc,CAAC;MAC3BA,WAAW,CAAC,eAAe,CAAC;MAC5BH,mBAAmB,CAAC,CAAC;MACrB;IACF;IACA,MAAM6B,UAAU,GAAG,MAAMlB,KAAK,CAACY,GAAG,EAAE;MAClC,GAAGC,OAAO;MACVX,OAAO,EAAE;QAAE,GAAGA,OAAO;QAAEiB,aAAa,EAAE,UAAUJ,WAAW;MAAG;IAChE,CAAC,CAAC;IAEF,OAAOG,UAAU;EACnB;EAEA,OAAOnB,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGlC,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMoC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,UAAU,qBAAqB,EAAE;UAC/D+B,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAIzB,QAAQ,CAACQ,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClCgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAElB,IAAI,CAAC;QACtC,CAAC,MAAM;UACLiB,OAAO,CAACR,KAAK,CAAC,gCAAgC,CAAC;QACjD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BK,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAO3B,OAAA;IAAAgC,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACtC,CAAC;AAACV,EAAA,CAzBID,gBAAgB;EAAA,QACHhC,WAAW;AAAA;AAAA4C,EAAA,GADxBZ,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}