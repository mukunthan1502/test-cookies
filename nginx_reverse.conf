# events {}

# http {
#     server {
#         listen 80;

#         # Serve the frontend from localhost
#         location / {
#             proxy_pass http://host.docker.internal:3000;  # Use host.docker.internal for cross-network access
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy requests to the API Gateway under the same domain
#         location /test-http-stage/ {
#             proxy_pass https://bj4458i08a.execute-api.ap-southeast-1.amazonaws.com/test-http-stage/;
#             proxy_set_header Host bj4458i08a.execute-api.ap-southeast-1.amazonaws.com;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Handle CORS preflight requests
#             if ($request_method = OPTIONS) {
#                 add_header 'Access-Control-Allow-Origin' '*';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
#                 add_header 'Access-Control-Max-Age' 3600;
#                 add_header 'Content-Length' 0;
#                 add_header 'Content-Type' 'text/plain';
#                 return 204;
#             }

#             # Add the necessary CORS headers for actual requests
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
#         }

#         location /test-rest-stage/ {
#             proxy_pass https://y9p3kmub24.execute-api.ap-southeast-1.amazonaws.com/test/;
#             proxy_set_header Host y9p3kmub24.execute-api.ap-southeast-1.amazonaws.com;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }



#     }
# }



events {}

http {
    server {
        listen 80;

        # Serve the frontend from localhost
        location / {
            proxy_pass http://host.docker.internal:3000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to the API Gateway under the same domain (HTTP stage)
        # location /test-http-stage/ {
        #     rewrite ^/test-http-stage/(.*)$ /$1 break;
        #     # proxy_pass https://y9p3kmub24.execute-api.ap-southeast-1.amazonaws.com;
        #     proxy_pass https://test.api.arc.genexis.gov.sg;
        #     proxy_set_header Host test.api.arc.genexis.gov.sg;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # Handle CORS preflight requests
        #     if ($request_method = OPTIONS) {
        #         add_header 'Access-Control-Allow-Origin' '*';
        #         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Amz-Date, X-Api-Key, X-Amz-Security-Token';
        #         add_header 'Access-Control-Max-Age' 3600;
        #         add_header 'Content-Length' 0;
        #         add_header 'Content-Type' 'text/plain';
        #         return 204;
        #     }

        #     # Add the necessary CORS headers for actual requests
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Amz-Date, X-Api-Key, X-Amz-Security-Token';
        #     add_header 'Access-Control-Allow-Credentials' 'true';  # Important for cookies
        # }

        # Proxy requests to the API Gateway under the same domain (REST stage)
        # location /test-rest-stage/ {
        #     rewrite ^/test-rest-stage/(.*)$ /$1 break;
        #     # proxy_pass https://y9p3kmub24.execute-api.ap-southeast-1.amazonaws.com;
        #     # proxy_pass https://test.api.arc.genexis.gov.sg;
        #     proxy_pass https://x8a1kt6ini.execute-api.ap-southeast-1.amazonaws.com;
        #     proxy_set_header Host x8a1kt6ini.execute-api.ap-southeast-1.amazonaws.com;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # Only add CORS headers if they aren't already present
        #     # add_header 'Access-Control-Allow-Origin' '*' always;
        #     # add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        #     # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #     }

        # Proxy requests to the API Gateway under the same domain (REST stage)
        location /test-rest-stage/ {
            rewrite ^/test-rest-stage/(.*)$ /dev/$1 break;
            proxy_pass https://x8a1kt6ini.execute-api.ap-southeast-1.amazonaws.com;
            # proxy_set_header Host x8a1kt6ini.execute-api.ap-southeast-1.amazonaws.com;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;

            # Handle CORS preflight requests
            # if ($request_method = OPTIONS) {
            #     add_header 'Access-Control-Allow-Origin' '*';
            #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Amz-Date, X-Api-Key, X-Amz-Security-Token';
            #     add_header 'Access-Control-Max-Age' 3600;
            #     add_header 'Content-Length' 0;
            #     add_header 'Content-Type' 'text/plain';
            #     return 204;
            # }

            # Add the necessary CORS headers for actual requests
            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Amz-Date, X-Api-Key, X-Amz-Security-Token';
            # add_header 'Access-Control-Allow-Credentials' 'true';
        }




    }
}
